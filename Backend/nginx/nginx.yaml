apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf-django
  namespace: backend
data:
  nginx: |
    upstream django-service {
      ip_hash;
      server django-service:8000;
    }
    server {
      listen 80;
      client_max_body_size 100M;
      location / {
        proxy_set_header	X-Real-IP $remote_addr;
        proxy_set_header	Host $http_host;
        proxy_set_header 	X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://django-service;
        proxy_connect_timeout       3600s;
        proxy_send_timeout          3600s;
        proxy_read_timeout          3600s;
        send_timeout                3600s;
      }
      location /static/ {
        autoindex off;
        alias /static/;
      }
    }
---
apiVersion: apps/v1 #Deployment
kind: Deployment
metadata:
  name: nginx-django
  namespace: backend
  labels:
    app: deploy-nginx
spec:
  replicas: 1 #replicaSets
  selector:
    matchLabels:
      app: nginx-django
  template:
    metadata:
      labels:
        app: nginx-django
    spec:
      containers:
        - name: nginx-django
          image: nginx:1.17.3
          lifecycle:
            preStop:
              exec:
                command: ["/usr/sbin/nginx", "-s", "quit"]
          volumeMounts:
            - name: data
              mountPath: /etc/nginx/conf.d
            - name: static
              mountPath: /static
          ports:
            - containerPort: 80
      volumes:
        - name: data
          configMap:
            name: nginx-conf-django
            items:
              - key: nginx
                path: default.conf
        - name: static
          persistentVolumeClaim:
            claimName: pvc-django-static

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-django
  namespace: backend
spec:
  type: ClusterIP
  selector:
    app: nginx-django
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 80

---

